# I am a workflow that demonstrates how to output the different the different context objects

name: Variables and Context

# Controls when the action will run. Workflow runs when manually triggered via UI or API
on:
  workflow_dispatch:
    # Inputs the workflow accepts
    inputs:
      name:
        # friendly description to be shown in the UI instead of name
        description: "Person to greet"
        # Default value if no value is explicitly provided
        default: "World"
        # Input has to be provided for the workflow to run
        required: true

env:
  VAR1: myworkflowvar1
  VAR2: myworkflowvar2
  VAR3: myworkflowvar3

# A workflow run is made of one or more jobs that can run sequentially or in parallel
jobs:
  job1:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as a part of the job
    steps:
      - name: Dump Github context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

  # step/job output variables
  job2:
    runs-on: ubuntu-latest

    outputs:
      output1: ${{ steps.step1.outputs.step1value }}
      output2: ${{ steps.step2.outputs.step2value }}

    steps:
      - name: Step 1
        id: step1
        # deprecated run: echo "::set-output name=step1value::hello"
        run: echo "step1value=hello" >> $GITHUB_OUTPUT

      - name: Step 2
        id: step2
        # deprecated run: echo "::set-output name=step2value::hello"
        run: echo "step2value=world" >> $GITHUB_OUTPUT

  job3:
    runs-on: ubuntu-latest
    needs: job2
    steps:
      - run: echo ${{ needs.job2.outputs.output1 }} ${{ needs.job2.outputs.output2 }}

  job4:
    runs-on: ubuntu-latest
    env:
      VAR2: myjobvar2
      VAR3: myjobvar3
    steps:
      - run: |
          echo $VAR1
          echo ${{ env.VAR1 }}

          echo ""

          echo $VAR2

          echo $VAR3
        env:
          VAR3: mystepvar3
